-메소드 오버로딩 (이름 잘 기억하기 비슷한거 다음에 배움)
[접근제어지시자] [리턴타입] [메소드이름]([매개변수]){
	
}
-> 메소드이름(매개변수);
-> 메소드 호출에는 메소드명, 매개변수(타입, 갯수)를 보고 메소드를 찾음 
-> 매개변수의 타입이 다르거나, 갯수가 다르면 동일한 메소드명으로 제작 가능 
ex)
public void test(int a){}
public void test(int a, int b){}
public void test(double a){}

public void add(int a, int b){}
public void add(int b, int a){} //변수명이 달라도 이런경우에는 안됨 
public void add(int a, int b, int c){}
public void add(int a, int b, int c, int d){}
public void add(int a, int b, int c, int d, int e){}

add(10,20);
add(10,20,30);

-----------------------------------------------------------------------------------

생성자와 소멸자 //자바에는 소멸자가 없음!소멸과 생성을 jvm이 자동으로 해줌
-> 생성자는 클래스를 바탕으로 객체를 생성할 때 자동으로 호출되는 메소드
//생성자(값을 초기화(셋팅))
-> 생성자는 기본준비를하는 역할(초기값 세팅)
-> 이름이 클래스랑 동일하고 리턴값이 없음 

-----------------------------------------------------------------------------------

지역변수, 전역변수, 정적변수

지역변수 : 메소드 내부에서 선언한 변수 
             -> 메소드 내부에서만 사용이 가능

전역변수 : 클래스변수 -> 클래스 영역에서 생성
	 -> 클래스 내부 어디서든 사용이 가능

정적변수 : 클래스와 관계없이 사용이 가능

---------------------------------------------------------------------------------------

객체 배열
int [] arr = new int[5];    //정수배열 한번에 다루기 위해 사용
Student [] arr = new Student[5];
arr[0] = new Student(); //이렇게  꼭 선언해줘야 함 아니면 오류 남

------------------------------------------------------------------------------------------

데이터를 표현하는 클래스
Entity, VO, DTO, Bean Class

데이터를 운영하는 클래스
Controller

데이터의 연산
Create : 데이터 입력
Read : 데이터 조회 
Update : 데이터 수정
Delete : 데이터 삭제














